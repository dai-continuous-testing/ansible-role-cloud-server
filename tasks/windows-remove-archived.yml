
# validation

- name: assert all vars are set
  assert: 
    that:
      - item is defined
      - item | length > 0
    quiet: true
  loop:
  - installation_root_folder
  - app_name
  - app_version

#

- name: test for previous installation version
  win_stat:
    path: "{{ installation_root_folder }}\\{{ app_name }}-previous"
  register: previous_exists

- name: load previous_version from remote file
  slurp:
    src: "{{ installation_root_folder }}/{{ app_name }}-previous"
  register: previous_file
  when: 
    - previous_exists.stat.exists

- name: set previous_version from remote file
  set_fact:
    previous_version: "{{ previous_file['content'] | b64decode }}"
  when: 
    - previous_exists.stat.exists

- name: test for current installation version
  win_stat:
    path: "{{ installation_root_folder }}\\{{ app_name }}-current"
  register: current_exists

- name: load current_version from remote file
  slurp:
    src: "{{ installation_root_folder }}/{{ app_name }}-current"
  register: current_file
  when: 
    - current_exists.stat.exists

- name: set current_version from remote file
  set_fact:
    current_version: "{{ current_file['content'] | b64decode }}"
  when: 
    - current_exists.stat.exists

- name: find old versions
  win_shell: |
    Get-ChildItem -Path {{ installation_root_folder }}\{{ app_name }}-* -Directory -Name
  register: old_versions
  changed_when: no

- name: remove old versions
  block:

    - name: remove old versions - first attempt
      win_file:
        path: "{{ installation_root_folder }}\\{{ item }}"
        state: absent
      with_items: "{{ old_versions.stdout_lines }}"
      when: 
        - item | regex_search("{{ app_name }}-")
        - item != "{{ app_name }}-{{ previous_version | default('invalid-version') }}"
        - item != "{{ app_name }}-{{ current_version | default('invalid-version') }}"
      register: remove_oldver_first_try
      ignore_errors: yes
  
    - name: pause for 20 seconds if first attempt failed
      pause:
        seconds: 20
      when: remove_oldver_first_try is failed
  
    - name: remove old versions - second attempt
      win_file:
        path: "{{ installation_root_folder }}\\{{ item }}"
        state: absent
      with_items: "{{ old_versions.stdout_lines }}"
      when: 
        - item | regex_search("{{ app_name }}-")
        - item != "{{ app_name }}-{{ previous_version | default('invalid-version') }}"
        - item != "{{ app_name }}-{{ current_version | default('invalid-version') }}"
        - remove_oldver_first_try is failed
      ignore_errors: yes    
